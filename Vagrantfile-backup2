Vagrant.configure("2") do |config| 
    config.vm.box = "ubuntu/focal64"
    config.vm.network "public_network", bridge: "Intel(R) Ethernet Connection (2) I219-LM"
    config.vm.provider "virtualbox" do |vb|
        vb.memory = "2544"
        vb.cpus = 2
    end
	
	config.vm.synced_folder "workspace", "/home/vagrant/workspace"

    config.vm.provision "shell", inline: <<-SHELL
        # Add Docker's official GPG key:
        sudo apt-get update
        sudo apt-get install ca-certificates curl
        sudo install -m 0755 -d /etc/apt/keyrings
        sudo curl -fsSL https://download.docker.com/linux/ubuntu/gpg -o /etc/apt/keyrings/docker.asc
        sudo chmod a+r /etc/apt/keyrings/docker.asc

        # Add the repository to Apt sources:
        echo \
        "deb [arch=$(dpkg --print-architecture) signed-by=/etc/apt/keyrings/docker.asc] https://download.docker.com/linux/ubuntu \
        $(. /etc/os-release && echo "$VERSION_CODENAME") stable" | \
        sudo tee /etc/apt/sources.list.d/docker.list > /dev/null
        sudo apt-get update

        sudo apt-get install -y docker-ce docker-ce-cli containerd.io docker-buildx-plugin docker-compose-plugin
		
		# Post install docker
		sudo usermod -aG docker $USER
		
		newgrp docker
		
		docker version

        # Install kind
		curl -Lo ./kind https://kind.sigs.k8s.io/dl/v0.23.0/kind-linux-amd64
		sudo chmod +x ./kind
		sudo mv ./kind /usr/local/bin/kind
		kind version
	
		# install kubectl
		curl -LO "https://dl.k8s.io/release/$(curl -L -s https://dl.k8s.io/release/stable.txt)/bin/linux/amd64/kubectl"
		sudo chmod +x ./kubectl
		sudo mv ./kubectl /usr/local/bin/kubectl
		kubectl version
		
		# config kubectl 
		mkdir -p ~/.kube
		sudo cp /root/.kube/config ~/.kube/
		sudo chown $(whoami):$(whoami) ~/.kube/config
		chmod 600 ~/.kube/config
		alias k=kubectl
		
		# Install helm
		curl -LO "https://get.helm.sh/helm-v3.15.3-linux-amd64.tar.gz"
		tar -zxvf helm-v3.15.3-linux-amd64.tar.gz
		sudo mv linux-amd64/helm /usr/local/bin/helm
		helm version
		rm helm-v3.15.3-linux-amd64.tar.gz
		rm -rf linux-amd64
		
		## create k8s cluster
	
		sudo kind create cluster --config=workspace/k8s-c1/config.yaml
		
		k get nodes
		
		# prometheus
		kubectl create namespace monitoring
		helm repo add prometheus-community https://prometheus-community.github.io/helm-charts
		helm repo update
		cd workspace
		helm pull prometheus-community/prometheus --untar
		cd prometheus
		helm install prometheus . -n monitoring
		
	SHELL
    
end
